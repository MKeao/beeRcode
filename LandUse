#load raster and site files
cdl <- raster('COR_clip.tif')
sites <- read.csv(sites)

#change site file type
sites.sp <- SpatialPointsDataFrame(Sites[,3:2], Sites)

#declare starting projection system for sites (lat/long)
points <- SpatialPoints(sites.sp, proj4string =CRS("+proj=longlat +datum=WGS84"))


#transform site points to the same crs as the raster file
pp <- spTransform(points, "EPSG:3035")

plot(pp)
plot(sites.sp2, add = TRUE)
#make buffer polygons with 1000m radius for each site
buffer1<-buffer(pp, width= 500, dissolve=F) 

#find buffer extent
extent(buffer1)

#change the extent of the raster file to the same as that for the buffer and crop (makes raster file smaller and easier to plot)
e <- as(extent(4064277, 4648550,  2764424, 3457660), 'SpatialPolygons')
crs(e) <- "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
Germany <- crop(cdl, e)

#make sure sites are in the right place on map
plot(Germany)
plot(sites.sp, add = TRUE)
plot(buffer1, add = TRUE)


#extract landcover classes from buffers for each point
freqs <- exact_extract(Germany, buffer1, function(value, coverage_fraction) {
  data.frame(value = value,
             frac = coverage_fraction / sum(coverage_fraction)) %>%
    group_by(value) %>%
    summarize(freq = sum(frac), .groups = 'drop') %>%
    pivot_wider(names_from = 'value',
                names_prefix = 'freq_',
                values_from = 'freq')
}) %>% 
  mutate(across(starts_with('freq'), replace_na, 0))

#export csv file
write.csv2(freqs, "CORINElandcover2.csv")
